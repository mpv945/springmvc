<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 加载配置文件 -->
    <!--<context:property-placeholder location="classpath:shiro/redis.properties" />-->

    <!-- redis数据源 具体参考https://www.cnblogs.com/Jxwz/p/8372308.html 和  https://juejin.im/post/5b1fae0bf265da6e406ea6d3-->
    <bean id="poolConfig" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <!--<property name="database" value="2" />-->

        <property name="hostName">
            <value>${redis.host}</value>
        </property>
        <property name="port">
            <value>${redis.port}</value>
        </property>
        <!--<property name="port" value="${redis.port}" />-->
        <!--<property name="password"></property>-->
    </bean>
<!--    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="100" />
        <property name="maxTotal" value="600" />
    </bean>-->

    <!-- Spring-redis连接池管理工厂，集群配置https://www.cnblogs.com/EasonJim/p/7805297.html 和 https://blog.csdn.net/adsadadaddadasda/article/details/78829337 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="poolConfig" />
        <!--<constructor-arg ref="jedisPoolConfig" />-->
    </bean>

    <!-- 缓存序列化方式 -->
    <!--对key的默认序列化器。默认值是StringSerializer -->
    <bean id="keySerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer" />

    <!--是对value的默认序列化器，默认值是取自DefaultSerializer的JdkSerializationRedisSerializer。
    可以使用GenericJackson2JsonRedisSerializer-->
    <bean id="valueSerializer"
          class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

    <!-- redis template definition -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />

        <!-- 缓存序列化方式 -->
        <property name="keySerializer" ref="keySerializer" />
        <property name="valueSerializer" ref="valueSerializer" />
        <property name="hashKeySerializer" ref="keySerializer" />
        <property name="hashValueSerializer" ref="valueSerializer" />

        <!--对key的默认序列化器。默认值是StringSerializer -->
 <!--       <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        &lt;!&ndash;是对value的默认序列化器，默认值是取自DefaultSerializer的JdkSerializationRedisSerializer。
         可以使用GenericJackson2JsonRedisSerializer&ndash;&gt;
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>

        &lt;!&ndash;和上面使用一套， &ndash;&gt;
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>-->


        <!--开启事务  -->
        <property name="enableTransactionSupport" value="true"></property>
    </bean>


</beans>