Passay提供的MessageResolver界面允许将密码验证结果任意转换为用于向用户显示的有意义的文本。
默认机制使用消息包来定义验证消息，其默认值如下所示。
HISTORY_VIOLATION=Password matches one of %1$s previous passwords.
ILLEGAL_WORD=Password contains the dictionary word '%1$s'.
ILLEGAL_WORD_REVERSED=Password contains the reversed dictionary word '%1$s'.
ILLEGAL_MATCH=Password matches the illegal pattern '%1$s'.
ALLOWED_MATCH=Password must match pattern '%1$s'.
ILLEGAL_CHAR=Password contains the illegal character '%1$s'.
ALLOWED_CHAR=Password contains the illegal character '%1$s'.
ILLEGAL_SEQUENCE=Password contains the illegal sequence '%1$s'.
ILLEGAL_USERNAME=Password contains the user id '%1$s'.
ILLEGAL_USERNAME_REVERSED=Password contains the user id '%1$s' in reverse.
ILLEGAL_WHITESPACE=Password cannot contain whitespace characters.
INSUFFICIENT_UPPERCASE=Password must contain at least %1$s uppercase characters.
INSUFFICIENT_LOWERCASE=Password must contain at least %1$s lowercase characters.
INSUFFICIENT_ALPHABETICAL=Password must contain at least %1$s alphabetical characters.
INSUFFICIENT_DIGIT=Password must contain at least %1$s digit characters.
INSUFFICIENT_SPECIAL=Password must contain at least %1$s special characters.
INSUFFICIENT_CHARACTERISTICS=Password matches %1$s of %3$s character rules, but %2$s are required.
SOURCE_VIOLATION=Password cannot be the same as your %1$s password.
TOO_LONG=Password must be no more than %2$s characters in length.
TOO_SHORT=Password must be at least %1$s characters in length.

以下示例演示如何使用自定义/本地化属性文件替换默认消息包。
Properties props = new Properties();
props.load(new FileInputStream("/path/to/messages.properties"));
MessageResolver resolver = new PropertiesMessageResolver(props);
PasswordValidator validator = new PasswordValidator(
  resolver, new LengthRule(8, 16), new WhitespaceRule());

spirng 登陆和注册密码策略
@EnableWebSecurity
//@Order(ManagementServerProperties.ACCESS_OVERRIDE_ORDER)
@Order(SecurityProperties.ACCESS_OVERRIDE_ORDER)
https://www.baeldung.com/spring-security-csrf
https://snyk.io/blog/spring-boot-security-best-practices

freemarker 生成前端 https://blog.csdn.net/tczhoulan/article/details/79312184

https://www.baeldung.com/spring-security-registration-verification-email
https://www.baeldung.com/spring-security-registration-password-encoding-bcrypt

xss 解决方案https://juejin.im/entry/5af526be6fb9a07ab774410a
https://zdran.com/20180511.html

支持https  #签发ECC证书请使用以下命令acme.sh --issue --dns dns_cx -d example.com -d *. example.com --keylength ec-256
Nginx 使用 Let's Encrypt 配置 HTTPS 和 HTTP/2 https://www.restran.net/2017/01/24/nginx-letsencrypt-https/
https://segmentfault.com/a/1190000017194280
https://zhih.me/acme-sh-guide/
https://www.rainng.com/acmesh-le/

前端插件 http://react-china.org/t/topic/27308
